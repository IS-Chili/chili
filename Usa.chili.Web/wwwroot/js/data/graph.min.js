const App=new Vue({el:"#app",data:function(){return{stations:[],variables:[],model:{stationId:Core.DEFAULT_STATION,variableId:1,date:null,isMetricUnits:!1},lastStationId:null,stationInfo:{},error:null,isLoading:!1}},created:function(){const t=this;Core.populateStationDropdown(this,!1);Core.populateVariableDropdown(this);const n=new URLSearchParams(window.location.search.substring(1));this.model.stationId=n.get("id")&&!isNaN(n.get("id"))?Number(n.get("id")):Core.DEFAULT_STATION;this.model.variableId=n.get("varId")&&!isNaN(n.get("varId"))?Number(n.get("varId")):1;this.model.date=n.get("date")?moment(n.get("date"),Core.DATE_PARAM_FORMAT).format(Core.DATE_FORMAT):null;this.model.isMetricUnits=localStorage.getItem("isMetricUnits")==="true";this.lastStationId=this.model.stationId;Core.getStationInfo(this,this.model.stationId);this.createGraph()},watch:{"model.isMetricUnits":function(n){localStorage.setItem("isMetricUnits",n.toString());this.createGraph()}},methods:{go:function(){this.createGraph()},next:function(){const n=this.model.date?moment(this.model.date,Core.DATE_FORMAT):null;n&&(n.add(1,"days"),$("#datePicker").data("datetimepicker").date(n));this.createGraph()},previous:function(){const n=this.model.date?moment(this.model.date,Core.DATE_FORMAT):null;n&&(n.add(-1,"days"),$("#datePicker").data("datetimepicker").date(n));this.createGraph()},lastDateTime:function(){$("#datePicker").data("datetimepicker").date(null);this.createGraph()},createGraph:function(){const n=this;if(!n.isLoading){const t={id:n.model.stationId,varId:n.model.variableId,date:n.model.date?moment(n.model.date,Core.DATE_FORMAT).format(Core.DATE_PARAM_FORMAT):""};history.replaceState(null,null,"/Data/Graph?"+new URLSearchParams(t).toString());n.error=null;$("#graph").hide();n.isLoading=!0;this.lastStationId!=this.model.stationId&&(this.lastStationId=this.model.stationId,Core.getStationInfo(this,this.model.stationId));axios.get("/data/StationGraph",{params:{stationId:n.model.stationId,variableId:n.model.variableId,date:n.model.date,isMetricUnits:n.model.isMetricUnits}}).then(function(t){n.isLoading=!1;const i=t.data;if(i.lastDateTimeEntry){const t=n.model.date?moment(n.model.date,Core.DATE_FORMAT):null,r=moment(i.firstDateTimeEntry,Core.DATETIME_FORMAT),u=moment(i.lastDateTimeEntry,Core.DATETIME_FORMAT);t!=null&&t.isBefore(r,"day")?n.error="There is no earlier data available for this station":t!=null&&t.isAfter(u,"day")?n.error="There is no later data available for this station":i.series[0].data.length==0&&(n.error="There is no data available for this date at this station");t==null||t.isAfter(u,"day")?$("#datePicker").data("datetimepicker").date(u):t!=null&&t.isBefore(r,"day")&&$("#datePicker").data("datetimepicker").date(r)}else n.error="There is no data available for this station";n.error||($("#graph").show(),Highcharts.chart("graph",{chart:{zoomType:"x",type:"line"},time:{useUTC:!1},title:{text:i.title},tooltip:{valueDecimals:2},xAxis:{type:"datetime",title:{text:i.xAxisTitle}},yAxis:{type:"linear",title:{text:i.yAxisTitle}},series:i.series,exporting:{buttons:{contextButton:{menuItems:["viewFullscreen","separator","downloadPNG","downloadJPEG","downloadSVG"]}}}}))}).catch(function(t){n.isLoading=!1;console.log("createGraph failed",t)})}}}});