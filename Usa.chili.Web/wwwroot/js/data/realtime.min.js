$(document).ready(function(){$("tbody").scroll(function(){$("thead").css("left",-$("tbody").scrollLeft());$("thead th:nth-child(1)").css("left",$("tbody").scrollLeft());$("tbody td:nth-child(1)").css("left",$("tbody").scrollLeft())})});const App=new Vue({el:"#app",data:function(){return{realtimeData:[],now:new Date,model:{isMetricUnits:!1,isWindChill:null},variableTypes:[]}},created:function(){const n=this;this.model.isMetricUnits=localStorage.getItem("isMetricUnits")==="true";localStorage.getItem("isWindChill")&&(this.model.isWindChill=localStorage.getItem("isWindChill")==="true");axios.get("/data/VariableTypeList").then(function(t){n.variableTypes=t.data}).catch(function(n){console.log("Get VariableTypeList failed",n)});n.getData();setInterval(function(){n.getData()},3e5)},computed:{nowFormated:function(){return moment(this.now).format("MM/DD/YYYY HH:mm:ss")}},watch:{"model.isMetricUnits":function(n){localStorage.setItem("isMetricUnits",n.toString());this.getData()},"model.isWindChill":function(n){localStorage.setItem("isWindChill",n.toString());this.getData()}},methods:{getUnit:function(n,t){if(this.variableTypes&&this.variableTypes.length>0)return t==="Metric"?this.variableTypes.find(t=>t.variableType===n).metricSymbol:this.variableTypes.find(t=>t.variableType===n).englishSymbol},getData:function(){const n=this;axios.get("/data/RealtimeData",{params:{isMetricUnits:n.model.isMetricUnits,isWindChill:n.model.isWindChill}}).then(function(t){Core.setNullsInArrayToNA(t.data);n.realtimeData=t.data;Vue.nextTick(function(){n.now=new Date;$('[data-toggle="tooltip"]').tooltip({boundary:"span",placement:"left"})})}).catch(function(n){console.log("getRealtimeData failed",n)})}}});