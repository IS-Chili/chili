@{
ViewBag.Title = "Realtime Data";
ViewBag.Description = "USA Mesonet Realtime Display";
}
@section styles {
<environment include="Development">
    <link rel="stylesheet" href="~/css/data/realtime.css" />
</environment>
<environment exclude="Development">
    <link rel="stylesheet" href="~/css/data/realtime.min.css" asp-append-version="true" />
</environment>
}
<div class="head-container bg-core-blue">
    <br>
    <h1 class="text-center">USA Mesonet Realtime Display</h1>
    <h2 class="text-center">{{ nowFormated }} CST</h2>
    <br>
</div>
<div class="head-container bg-core-translucent">
    <br>
    <div class="form-row d-flex justify-content-center">
        <div class="form-group col-xs-2 mr-2">
            <div class="custom-control custom-switch">
                <input type="checkbox" class="custom-control-input" id="windChill" v-model="model.isWindChill">
                <label class="custom-control-label" for="windChill">Display Windchill</label>
            </div>
        </div>
        <div class="form-group col-xs-2">
            <div class="custom-control custom-switch">
                <input type="checkbox" class="custom-control-input" id="metricUnits" v-model="model.isMetricUnits">
                <label class="custom-control-label" for="metricUnits">Use Metric Units</label>
            </div>
        </div>
    </div>
</div>
<table id="realTimeDataTable" class="mb-3" style="display: none">
    <thead>
        <tr>
            <th colspan="1"></th>
            <th colspan="4" class="text-center">&#64;&nbsp;6.56 ft</th>
            <th colspan="2" class="text-center">&#64;&nbsp;32.81 ft</th>
            <th class="text-center">SeaLv</th>
            <th colspan="5" class="text-center">Today's Extremes (<span class="text-color-high">Hi</span>/<span
                    class="text-color-low">Lo</span>)</th>
            <th colspan="5" class="text-center">Yesterday's Extremes (<span class="text-color-high">Hi</span>/<span
                    class="text-color-low">Lo</span>)</th>
        </tr>
        <tr>
            <th>Location/Obs time</th>
            <th class="text-center">Temp</th>
            <th class="text-center">{{ model.isWindChill ? 'Wdchl' : 'HtIdx' }}</th>
            <th class="text-center">DewPt</th>
            <th class="text-center">Hum</th>
            <th class="text-center">WdDir</th>
            <th class="text-center">WdSpd</th>
            <th class="text-center">Press</th>
            <th class="text-center">Rain</th>
            <th class="text-center">WdSpd</th>
            <th class="text-center">Temp</th>
            <th class="text-center">DewPt</th>
            <th class="text-center">Hum</th>
            <th class="text-center">Rain</th>
            <th class="text-center">WdSpd</th>
            <th class="text-center">Temp</th>
            <th class="text-center">DewPt</th>
            <th class="text-center">Hum</th>
        </tr>
        <tr class="text-center" v-if="model.isMetricUnits">
            <th colspan="1"></th>
            <th v-html="getUnit('Temperature', 'Metric')"></th>
            <th v-html="getUnit('Temperature', 'Metric')"></th>
            <th v-html="getUnit('Temperature', 'Metric')"></th>
            <th v-html="getUnit('Humidity', 'Metric')"></th>
            <th v-html="getUnit('Direction', 'Metric')"></th>
            <th v-html="getUnit('Speed', 'Metric')"></th>
            <th v-html="getUnit('Pressure', 'Metric')"></th>
            <th v-html="getUnit('Total_Precipitation', 'Metric')"></th>
            <th v-html="getUnit('Speed', 'Metric')"></th>
            <th v-html="getUnit('Temperature', 'Metric')"></th>
            <th v-html="getUnit('Temperature', 'Metric')"></th>
            <th v-html="getUnit('Humidity', 'Metric')"></th>
            <th v-html="getUnit('Total_Precipitation', 'Metric')"></th>
            <th v-html="getUnit('Speed', 'Metric')"></th>
            <th v-html="getUnit('Temperature', 'Metric')"></th>
            <th v-html="getUnit('Temperature', 'Metric')"></th>
            <th v-html="getUnit('Humidity', 'Metric')"></th>
        </tr>
        <tr class="text-center" v-else>
            <th colspan="1"></th>
            <th v-html="getUnit('Temperature', 'English')"></th>
            <th v-html="getUnit('Temperature', 'English')"></th>
            <th v-html="getUnit('Temperature', 'English')"></th>
            <th v-html="getUnit('Humidity', 'English')"></th>
            <th v-html="getUnit('Direction', 'English')"></th>
            <th v-html="getUnit('Speed', 'English')"></th>
            <th v-html="getUnit('Pressure', 'English')"></th>
            <th v-html="getUnit('Total_Precipitation', 'English')"></th>
            <th v-html="getUnit('Speed', 'English')"></th>
            <th v-html="getUnit('Temperature', 'English')"></th>
            <th v-html="getUnit('Temperature', 'English')"></th>
            <th v-html="getUnit('Humidity', 'English')"></th>
            <th v-html="getUnit('Total_Precipitation', 'English')"></th>
            <th v-html="getUnit('Speed', 'English')"></th>
            <th v-html="getUnit('Temperature', 'English')"></th>
            <th v-html="getUnit('Temperature', 'English')"></th>
            <th v-html="getUnit('Humidity', 'English')"></th>
        </tr>
    </thead>
    <tbody>
        <tr v-for='item in realtimeData' :class="item.isStationOffline ? 'row-dark' : ''">
            <td>
                <div>
                    <a :href="'/Data/Station?id=' + item.stationId">
                        <span class="font-weight-bold font-georgia">{{ item.stationName }}</span>
                    </a>
                </div>
                <div v-if="item.isStationOffline">
                    <span class="station-offline"><em>Station Offline</em></span>
                </div>
                <div v-else>
                    <small>{{ item.stationTimestamp }}</small>
                </div>
            </td>
            <td v-if="!item.isStationOffline" class="temp font-weight-bold">{{ item.airTemperature }}</td>
            <td v-if="!item.isStationOffline" :class="item.felt != 'N/A' ? (item.isWindChill ? 'wc' : 'ht') : ''">
                {{ item.felt }}</td>
            <td v-if="!item.isStationOffline" class="hum">{{ item.dewPoint }}</td>
            <td v-if="!item.isStationOffline" class="hum">{{ item.realHumidity }}</td>
            <td v-if="!item.isStationOffline" class="wind">{{ item.windDirection }}</td>
            <td v-if="!item.isStationOffline" class="wind">{{ item.windSpeed }}</td>
            <td v-if="!item.isStationOffline" class="pres">{{ item.pressure }}</td>
            <td v-if="!item.isStationOffline" class="rain">{{ item.precipitation }}</td>
            <td v-if="!item.isStationOffline" class="wind">
                <span data-toggle="tooltip" :title="item.todayExtreme.windSpeedMaxTimestamp">
                    {{ item.todayExtreme.windSpeedMax }}
                </span>
            </td>
            <td v-if="!item.isStationOffline">
                <div>
                    <span :class="item.todayExtreme.airTemperatureHigh != 'N/A' ? 'text-color-high' : ''"
                        data-toggle="tooltip" :title="item.todayExtreme.airTemperatureHighTimestamp">
                        {{ item.todayExtreme.airTemperatureHigh }}
                    </span>
                </div>
                <div>
                    <span :class="item.todayExtreme.airTemperatureLow != 'N/A' ? 'text-color-low' : ''"
                        data-toggle="tooltip" :title="item.todayExtreme.airTemperatureLowTimestamp">
                        {{ item.todayExtreme.airTemperatureLow }}
                    </span>
                </div>
            </td>
            <td v-if="!item.isStationOffline">
                <div>
                    <span :class="item.todayExtreme.dewPointHigh != 'N/A' ? 'text-color-high' : ''"
                        data-toggle="tooltip" :title="item.todayExtreme.dewPointHighTimestamp">
                        {{ item.todayExtreme.dewPointHigh }}
                    </span>
                </div>
                <div>
                    <span :class="item.todayExtreme.dewPointLow != 'N/A' ? 'text-color-low' : ''" data-toggle="tooltip"
                        :title="item.todayExtreme.dewPointLowTimestamp">
                        {{ item.todayExtreme.dewPointLow }}
                    </span>
                </div>
            </td>
            <td v-if="!item.isStationOffline">
                <div>
                    <span :class="item.todayExtreme.realHumidityHigh != 'N/A' ? 'text-color-high' : ''"
                        data-toggle="tooltip" :title="item.todayExtreme.realHumidityHighTimestamp">
                        {{ item.todayExtreme.realHumidityHigh }}
                    </span>
                </div>
                <div>
                    <span :class="item.todayExtreme.realHumidityLow != 'N/A' ? 'text-color-low' : ''"
                        data-toggle="tooltip" :title="item.todayExtreme.realHumidityLowTimestamp">
                        {{ item.todayExtreme.realHumidityLow }}
                    </span>
                </div>
            </td>
            <td v-if="!item.isStationOffline" class="rain">{{ item.yesterdayExtreme.precipitation }}</td>
            <td v-if="!item.isStationOffline" class="wind">
                <span data-toggle="tooltip" :title="item.yesterdayExtreme.windSpeedMaxTimestamp">
                    {{ item.yesterdayExtreme.windSpeedMax }}
                </span>
            </td>
            <td v-if="!item.isStationOffline">
                <div>
                    <span :class="item.yesterdayExtreme.airTemperatureHigh != 'N/A' ? 'text-color-high' : ''"
                        data-toggle="tooltip" :title="item.yesterdayExtreme.airTemperatureHighTimestamp">
                        {{ item.yesterdayExtreme.airTemperatureHigh }}
                    </span>
                </div>
                <div>
                    <span :class="item.yesterdayExtreme.airTemperatureLow != 'N/A' ? 'text-color-low' : ''"
                        data-toggle="tooltip" :title="item.yesterdayExtreme.airTemperatureLowTimestamp">
                        {{ item.yesterdayExtreme.airTemperatureLow }}
                    </span>
                </div>
            </td>
            <td v-if="!item.isStationOffline">
                <div>
                    <span :class="item.yesterdayExtreme.dewPointHigh != 'N/A' ? 'text-color-high' : ''"
                        data-toggle="tooltip" :title="item.yesterdayExtreme.dewPointHighTimestamp">
                        {{ item.yesterdayExtreme.dewPointHigh }}
                    </span>
                </div>
                <div>
                    <span :class="item.yesterdayExtreme.dewPointLow != 'N/A' ? 'text-color-low' : ''"
                        data-toggle="tooltip" :title="item.yesterdayExtreme.dewPointLowTimestamp">
                        {{ item.yesterdayExtreme.dewPointLow }}
                    </span>
                </div>
            </td>
            <td v-if="!item.isStationOffline">
                <div>
                    <span :class="item.yesterdayExtreme.realHumidityHigh != 'N/A' ? 'text-color-high' : ''"
                        data-toggle="tooltip" :title="item.yesterdayExtreme.realHumidityHighTimestamp">
                        {{ item.yesterdayExtreme.realHumidityHigh }}
                    </span>
                </div>
                <div>
                    <span :class="item.yesterdayExtreme.realHumidityLow != 'N/A' ? 'text-color-low' : ''"
                        data-toggle="tooltip" :title="item.yesterdayExtreme.realHumidityLowTimestamp">
                        {{ item.yesterdayExtreme.realHumidityLow }}
                    </span>
                </div>
            </td>
        </tr>
    </tbody>
</table>
@section scripts {
<environment include="Development">
    <script src="~/js/data/realtime.js"></script>
</environment>
<environment exclude="Development">
    <script src="~/js/data/realtime.min.js" asp-append-version="true"></script>
</environment>
}
